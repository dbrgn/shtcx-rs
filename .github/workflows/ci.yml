on:
  push:
  schedule:
    - cron: '30 3 * * 2'

name: CI

jobs:

  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features
      - name: Run tests through tarpaulin
        uses: actions-rs/tarpaulin@v0.1
      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml

  ensure_no_std:
    name: Ensure no_std
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Download cargo-nono
        run: |
          wget https://github.com/hobofan/cargo-nono/releases/download/0.1.6/cargo-nono-0.1.6-x86_64-unknown-linux-gnu.tar.gz \
            && tar xfvz cargo-nono-0.1.6-x86_64-unknown-linux-gnu.tar.gz
      - name: Run check
        run: ./cargo-nono check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt
            override: true
      - run: cargo fmt -- --check
